import React from 'react'
import { useState } from 'react';
import Ingredient from './Ingredient';

export default function LeftPage({getRecipeData, getRecipeInfo}) {

    const [ingredient, setIngredient] = useState('');
    const [ingredientsList, setIngredientsList] = useState([]);
    const [index, setIndex]= useState(0);
    const [ranking, setRanking]= useState(1);

    var recipeIds;

    const deleteIngredient=(del_id)=>{
        setIngredientsList(ingredientsList.filter((ingredient)=> ingredient.id !== del_id))
    }

    const handleSubmit=(e)=> {
        if(ingredient)
        {
            setIngredientsList([...ingredientsList, {id:index,ingredient:ingredient}]);
            setIndex(index+1)
                    
        }
        setIngredient("");
      }

    const handleChangeCheckbox = event => {
       if (event.target.checked) {
          setRanking(2);
          console.log('checked');
        } else {
          setRanking(1);
          console.log("NOT checked");
        }
      };

    const sendRequest=()=>{
        var names = ingredientsList.map(function(el) {
            return el['ingredient'];
          });
        names= names.join();
        const axios = require("axios");

        const options = {
          method: 'GET',
          url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients',
          params: {
            ingredients: names,
            number: '10',
            ignorePantry: 'true',
            ranking: ranking
          },
          headers: {
            'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
            'X-RapidAPI-Key': 'db6409671emsh1d25ad81f0cd5b8p17b1e6jsn3666920689d5'
          }
        };
        
        axios.request(options).then(function (response) {
            getRecipeData(response.data);

            recipeIds= response.data.map(function(el) {
                return el['id'];
              });
            recipeIds= recipeIds.join();
            console.log(recipeIds);
            
            sendRequestGetInfo();

        }).catch(function (error) {
            console.error(error);
        });
    }

    const sendRequestGetInfo=()=>{
        const axios = require("axios");

        const options = {
          method: 'GET',
          url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/informationBulk',
          params: {ids: recipeIds},
          headers: {
            'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
            'X-RapidAPI-Key': 'db6409671emsh1d25ad81f0cd5b8p17b1e6jsn3666920689d5'
          }
        };
        
        axios.request(options).then(function (response) {
            getRecipeInfo(response.data);
            console.log(response.data);
        }).catch(function (error) {
            console.error(error);
        });
    }

    return (
        <div className='whole-left'>
            <div className="add-ing">
              <div className='add-ing-div'>
                <input className="add-ing-input" type='text' maxLength="25" value={ingredient} placeholder='Add ingredient...' onChange={(event) => {
                    setIngredient(event.target.value)
                }
                } />
                <button className="add-ing-button" onClick={
                    handleSubmit
                }>Add</button>
              </div>
                <button className='get-recipes-btn' onClick={
                    sendRequest
                }
                ><img className='search-img' src={require('.//search.png')} alt=""/></button>
            </div>

            <div className="toggle-checkbox-wrapper">
                <input className="toggle-checkbox" type="checkbox" id="toggle" onChange={handleChangeCheckbox}/>
                <label className="slider" for="toggle">
                <span className="toggle-switch opt1">Maximize used ingredients</span>
                <span className="toggle-switch opt2">Minimize missing ingredients</span>
                </label>
            </div>

            <div className='display-ingredients'>
                {ingredientsList.map((ingredient, id) => {
                    return <Ingredient key={ingredient.id} ing={ingredient} onDelete={deleteIngredient} />
                })}
            </div>

        </div>
    )
}






.whole-left{
    width: 50%;
    height:100vh;
    margin-top: 100px;
    position: fixed;
    overflow-x: hidden;
    top:0;
    left:0;
    background-color: rgb(212, 192, 182);
}

.add-ing{
    margin-top:40px;
    left:15%;
    width:70%;
    position: relative;
    display: inline-flex;
}

.add-ing-input{
    padding:0px 20px;
    width: 100%;
    height: 60px;

    font-size:20px;
    border-radius: 60px;
    border:solid 1.5px rgb(196, 181, 159);
    outline:none;
}

.add-ing-div{
  display: flex;
}

.add-ing-button{
    height:53px;
    width: 100px;
    top:4.75px;
    right:15%;

    background-color: rgb(218, 214, 211);
    font-size:20px;
    border-radius: 60px;
    border:none;
    outline:none;
    cursor:pointer;
}

.display-ingredients{
    margin-top:20px;
    display:flex;
    flex-direction: column;
    justify-content: center;
    margin-bottom:160px;
}

.ingredient{
    width: 60%;
    height: 40px;
    margin-left: 18%;
    margin-top:5px;
    padding: 0 2.5%;
    border-radius: 30px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    
    background-color: rgb(250, 249, 249);
    border: solid 1px rgb(196, 181, 159);
    font-size: 20px;
    
}

.del-ing-btn{
    height: 40px;
    cursor: pointer;
    border: none;
    background-color: transparent;
    font-size: 25px;
    color: red;
    margin:0;
    margin-top: -7.5px;
}

.get-recipes-div{
    display: flex;
    justify-content: center;
}

.get-recipes-btn{
    border:none;
    border-radius: 100%;
    font-size:30px;
    height:50px;
    width: 60px;
    cursor:pointer;
    margin-top:25px;
    background: rgb(167, 141, 129);
    box-shadow: 0 2px 2px 0 rgba(97, 81, 63, 0.14),
    0 3px 1px -2px rgba(116, 94, 73, 0.12), 0 1px 5px 0 rgba(109, 89, 70, 0.2);
}

.search-img{
    margin-top:4px;
    width:70%;
    height: 63%;
    opacity: 80%;
}

/* toggle-switch */
  .toggle-checkbox-wrapper {
    margin-left:15vw;
    padding: 10px;
  }
  
  .toggle-checkbox {
    display: none;
  }
  
  .slider {
    position: relative;
  }

  .slider::before {
    background: rgb(167, 141, 129);
    border-radius: 34px;
    bottom: 0;
    content: '';
    height: 24px;
    margin: auto;
    position: absolute;
    top: 0;
    width: 40px;
    cursor: pointer;
  }
  
  .slider::after {
    background: white;
    border-radius: 50%;
    bottom: 0;
    content: '';
    height: 16px;
    left: 4px;
    margin: auto;
    position: absolute;
    top: 0;
    transition: 0.4s;
    width: 16px;
    cursor: pointer;
  }
  
  .toggle-switch {
    margin-left: 50px;
  }
  
  .toggle-switch.opt1 {
    color: white;
    font-size: 17px;
    cursor: pointer;
  }
  
  .toggle-switch.opt2 {
    color: white;
    display: none;
    font-size: 17px;
    cursor: pointer;
  }
  
  .toggle-checkbox:checked + .slider::before {
    background-color: white;
  }
  
  .toggle-checkbox:checked + .slider::after {
    background-color: rgb(167, 141, 129);
    transform: translateX(16px);
  }
  
  .toggle-checkbox:checked ~ .slider > .toggle-switch.opt1 {
    display: none;
  }
  
  .toggle-checkbox:checked ~ .slider > .toggle-switch.opt2 {
    display: inline-block;
  }
    